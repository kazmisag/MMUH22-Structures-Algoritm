add_test([=[Card.init]=]  [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build/test_deck]==] [==[--gtest_filter=Card.init]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Card.init]=]  PROPERTIES WORKING_DIRECTORY [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[Deck.init]=]  [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build/test_deck]==] [==[--gtest_filter=Deck.init]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Deck.init]=]  PROPERTIES WORKING_DIRECTORY [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[Deck.insert]=]  [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build/test_deck]==] [==[--gtest_filter=Deck.insert]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Deck.insert]=]  PROPERTIES WORKING_DIRECTORY [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[Deck.shuffle_size_take]=]  [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build/test_deck]==] [==[--gtest_filter=Deck.shuffle_size_take]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Deck.shuffle_size_take]=]  PROPERTIES WORKING_DIRECTORY [==[/home/kazmisag/Documents/ECutbildining SW Developer/Data Structrued and Algo/MMUH22-Structures-Algoritm/Assignment 1_2/Cpp/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  test_deck_TESTS Card.init Deck.init Deck.insert Deck.shuffle_size_take)
